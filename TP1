/* OSARUMEN SOLOMON OSAZUWA
         VIBOT*/
#include <iostream>
#define PI 3.14159

using namespace std;


// Question 1 - A function to compute the Area and Circumference of  sequence

double Circumference()
{
    int r;

    cout << "Enter radius of a Circle" << endl;
    cin>>r;

    float Area,Circumference,diameter;
    Area = PI*(r*r);
    diameter = 2*r;
    Circumference = PI*diameter;

    cout << " Area of a Circle is = "<<Area<<"sq.units\n";
    cout << " diameter of a Circle is = "<<diameter<<"units\n";
    cout << " Circumference of a Circle is = "<<Circumference<<"units\n\n";

    return 0;
}
// Question 2 - A function to find the Maximum and Minimum values of a set of numbers

double values()
{
   double Array[5]= {60,72,51,26,8};
   double Max= Array[0];
   double Min= Array[0];

   //Determine the Maximum and Minimum value
int i;

for (i=1;i<5;i++)
{
    if (Max < Array[i])
        Max = Array[i];
    if (Min > Array[i])
        Min = Array[i];
}
    cout << "The Maximum value is \n" << Max<<endl;
    cout << "The Minimum value is \n" << Min<<endl;


    return 0;
}

// Question 3 - A function to compute Fibonacci sequence

int Fibonacci()
{
    int num,first=0,second=1,next;

    cout<<"Enter the rank of sequence to be printed"<< endl;
    cin>>num;
    cout<<"Fibonacci sequence:"<<endl;

    for (int i=0; i<num;i++)
        {
        cout<<first<<" \n\n";
        next = first+second;
        first = second;
        second = next;
    }

    return 0;

}

// Question 4 - A function to display Multiplication Table of a Number

int Multiplication_table()
{

    int number,multiplier;

    cout << "Enter the number" << endl;
    cin>>number;

    for (multiplier = 1; multiplier <= 10; multiplier++)
        {
        cout <<number<< " * " <<multiplier<<" = "<<(number*multiplier)<< endl;
    }
    return 0;

}

// Question 5 -  Function to compute Truth table with operators AND & OR using three variables
bool Truth_table()
{
  bool bSolution;
  std::cout<< "AND Table\n\n";
  std::cout<<"0 & 0 & 0 = " <<(bSolution = 0 & 0 & 0) << std::endl;
  std::cout<<"0 & 0 & 1 = " <<(bSolution = 0 & 0 & 1) << std::endl;
  std::cout<<"0 & 1 & 0 = " <<(bSolution = 0 & 1 & 0) << std::endl;
  std::cout<<"0 & 1 & 1 = " <<(bSolution = 0 & 1 & 1) << std::endl;
  std::cout<<"1 & 0 & 0 = " <<(bSolution = 1 & 0 & 0) << std::endl;
  std::cout<<"1 & 0 & 1 = " <<(bSolution = 1 & 0 & 1) << std::endl;
  std::cout<<"1 & 1 & 0 = " <<(bSolution = 1 & 1 & 0) << std::endl;
  std::cout<<"1 & 1 & 1 = " <<(bSolution = 1 & 1 & 1) << std::endl;

  std::cout<< "OR Table\n\n";
  std::cout<<"0 + 0 + 0 = " <<(bSolution = 0 + 0 + 0) << std::endl;
  std::cout<<"0 + 0 + 1 = " <<(bSolution = 0 + 0 + 1) << std::endl;
  std::cout<<"0 + 1 + 0 = " <<(bSolution = 0 + 1 + 0) << std::endl;
  std::cout<<"0 + 1 + 1 = " <<(bSolution = 0 + 1 + 1) << std::endl;
  std::cout<<"1 + 0 + 0 = " <<(bSolution = 1 + 0 + 0) << std::endl;
  std::cout<<"1 + 0 + 1 = " <<(bSolution = 1 + 0 + 1) << std::endl;
  std::cout<<"1 + 1 + 0 = " <<(bSolution = 1 + 1 + 0) << std::endl;
  std::cout<<"1 + 1 + 1 = " <<(bSolution = 1 + 1 + 1) << std::endl;

  return 0;

}

int main()
{
    Circumference();
    values();
    Fibonacci();
    Multiplication_table();
	Truth_table();
    return 0;
}
